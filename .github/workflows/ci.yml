name: CI Pipeline

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  # Job 1: Set up environment and install dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12.0

        uses: actions/setup-python@v2
        with:
          python-version: 3.12.0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  # Job 2: Linting and Code Quality Check
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12.0
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.0

      - name: Install flake8 for linting
        run: |
          pip install flake8
          flake8 src --max-line-length=80

  # Job 3: Run Tests
  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12.0
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.0

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest tests --maxfail=1 --disable-warnings -q

  # Job 4: Build and Upload Artifacts (optional)
  upload_artifacts:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: tests/results/

  # Job 5: Deploy API (optional, for production environments)
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'  # Only deploy on push to main
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12.0
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.0

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Deploy to Server
        run: |
          # Example command for deployment, replace with actual steps
          echo "Deploying API to production server"
          ssh user@yourserver "cd /path/to/your/app && git pull && systemctl restart your-app"
